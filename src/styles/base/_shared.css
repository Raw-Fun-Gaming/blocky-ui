/* ========================================
   SHARED COMPONENT STYLES
   Base styles used across multiple blocky components
   ======================================== */

/* ========================================
   SHARED CONTENT CONTAINERS
   Used by modal, card, and info components
   ======================================== */

.blocky-content {
  position: relative;
  z-index: var(--blocky-z-content);
  padding: 0;
  width: 100%;
  max-height: 80vh;
  overflow-y: auto;
  box-sizing: border-box;
  color: var(--blocky-text-primary);
  min-height: 100px;
}

/* ========================================
   SHARED HEADERS
   Standard and bordered variants
   ======================================== */

.blocky-header {
  padding: var(--blocky-padding-md) var(--blocky-padding-lg);
}

.blocky-header-bordered {
  margin: 0;
  padding: var(--blocky-padding-md) var(--blocky-padding-lg);
  border-bottom: var(--blocky-border-width-thin) solid rgba(255, 255, 255, 0.3);
}

/* ========================================
   SHARED TITLES
   Base and enhanced variants with 3D text effects
   ======================================== */

.blocky-title {
  margin: 0;
  color: var(--blocky-text-primary);
  font-size: var(--blocky-font-xl);
  font-weight: var(--blocky-font-weight-bold);
  text-transform: uppercase;
  letter-spacing: var(--blocky-letter-spacing-wide);
}

.blocky-title-enhanced {
  margin: 0;
  color: var(--blocky-text-primary);
  font-size: var(--blocky-font-xl);
  font-weight: var(--blocky-font-weight-bold);
  text-transform: uppercase;
  text-align: center;
  letter-spacing: var(--blocky-letter-spacing-wide);
  text-shadow: var(--blocky-text-shadow-lg);
}

/* ========================================
   SHARED OVERLAYS
   Different overlay styles for modals and info
   ======================================== */

.blocky-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--blocky-overlay-modal);
  backdrop-filter: var(--blocky-blur-md);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: var(--blocky-z-overlay-modal);
  cursor: pointer;
  opacity: 0;
  animation: modalFadeIn var(--blocky-transition-normal) ease-out forwards;
}

.blocky-info-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--blocky-overlay-info);
  backdrop-filter: var(--blocky-blur-md);
  -webkit-backdrop-filter: var(--blocky-blur-md);
  z-index: var(--blocky-z-overlay-info);
  display: flex;
  align-items: center;
  justify-content: center;
}

/* ========================================
   SHARED 3D BLOCKY EFFECTS
   Reusable 3D depth styles
   ======================================== */

.blocky-3d {
  border: var(--blocky-border-width) solid rgba(255, 255, 255, 0.3);
  border-radius: var(--blocky-border-radius);
  backdrop-filter: var(--blocky-blur-md);
  box-shadow: var(--blocky-shadow-base), var(--blocky-shadow-far), var(--blocky-inset-combined);
  transition: all var(--blocky-transition-normal) ease;
}

.blocky-3d:hover {
  transform: translateY(-2px);
  box-shadow: var(--blocky-shadow-hover), var(--blocky-inset-combined);
}

.blocky-3d:active {
  transform: translateY(1px);
  box-shadow: var(--blocky-shadow-active), var(--blocky-inset-combined);
}

/* ========================================
   SHARED GRADIENT BACKGROUNDS
   Reusable gradient patterns for different colors
   ======================================== */

.blocky-gradient {
  position: relative;
  overflow: hidden;
}

.blocky-gradient::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at center, rgba(255, 255, 255, 0.2) 0%, transparent 70%);
  z-index: 1;
  pointer-events: none;
}

/* ========================================
   CLOSE BUTTON (SHARED)
   Used by modal and info components
   ======================================== */

.blocky-close-btn {
  position: absolute;
  top: var(--blocky-padding-md);
  right: var(--blocky-padding-md);
  width: 32px;
  height: 32px;
  padding: 0;
  border: var(--blocky-border-width-thin) solid rgba(255, 255, 255, 0.3);
  border-radius: var(--blocky-border-radius-sm);
  background: linear-gradient(180deg, rgba(255, 68, 68, 0.9) 0%, rgba(255, 68, 68, 0.7) 100%);
  color: var(--blocky-text-primary);
  font-size: var(--blocky-font-lg);
  font-weight: var(--blocky-font-weight-bold);
  cursor: pointer;
  box-shadow: var(--blocky-shadow-base), var(--blocky-inset-combined);
  transition: all var(--blocky-transition-fast) ease;
  z-index: var(--blocky-z-dropdown);
  display: flex;
  align-items: center;
  justify-content: center;
}

.blocky-close-btn::before {
  content: 'Ã—';
  line-height: 1;
}

.blocky-close-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 0 rgba(0, 0, 0, 0.3), 0 8px 16px rgba(0, 0, 0, 0.5),
    var(--blocky-inset-combined);
}

.blocky-close-btn:active {
  transform: translateY(0);
  box-shadow: var(--blocky-shadow-active), var(--blocky-inset-combined);
}

/* ========================================
   DISABLED STATE (SHARED)
   Only affects blocky components
   ======================================== */

.blocky-disabled,
.blocky-btn[disabled],
.blocky-btn-wrapper [disabled],
.blocky-modal-wrapper [disabled],
.blocky-card [disabled],
.blocky-info [disabled] {
  opacity: var(--blocky-opacity-disabled);
  cursor: not-allowed;
  pointer-events: none;
}
